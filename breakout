import pygame
from pygame.locals import *
from sys import exit

pygame.init()

# colors
COLOR_BLUE = (0, 180, 250)
COLOR_DARKBLUE = (0, 140, 250)
COLOR_BLACK = (0, 0, 0)
COLOR_WHITE = (255, 255, 255)
COLOR_GREY = (235, 245, 255)
COLOR_RED = (162, 8, 0)
COLOR_YELLOW = (197, 199, 37)
COLOR_GREEN = (0, 127, 33)
COLOR_ORANGE = (183, 119, 0)

screen_width = 505
screen_height = 700
# screen size
size = (screen_width, screen_height)
player_x = 245
player_y = 600

# create the screen
screen = pygame.display.set_mode(size)
pygame.display.set_caption("Breakout")

all_sprites = pygame.sprite.Group()
all_bricks_sprites = pygame.sprite.Group()

# variables
brick_width = 30
brick_height = 10
brick_color = 0
game_clock = pygame.time.Clock()
fps = 30
ball_x = 250
ball_y = 450
ball_dx = 5
ball_dy = -5
ball_width = 10
ball_height = 10

# class brick
class Brick(pygame.sprite.Sprite):
    def __init__(self, color, x, y):
        pygame.sprite.Sprite.__init__(self)
        # self.image = pygame.Surface([width, height])
        self.x = x
        self.y = y
        self.width = 30
        self.height = 10
        self.color = color

    def render(self):
        pygame.draw.rect(screen, self.color, (self.x, self.y, self.width, self.height))


bricks = []
for coord_y in range(180, 286, 15):
    if 180 <= coord_y <= 195:
        brick_color = COLOR_RED
    elif 210 <= coord_y <= 225:
        brick_color = COLOR_ORANGE
    elif 240 <= coord_y <= 255:
        brick_color = COLOR_GREEN
    elif coord_y > 255:
        brick_color = COLOR_YELLOW
    for coord_x in range(10, 466, 35):
        brick = Brick(brick_color, coord_x, coord_y)
        bricks.append(brick)


# create the game loop
game_loop = True
while game_loop:
    game_clock.tick(fps)
    screen.fill(COLOR_BLACK)
    # player position(cord.x, cord.y, width, height)
    player_position = (player_x, player_y, 30, 10)
    # player
    pygame.draw.rect(screen, COLOR_BLUE, player_position)
    # ball
    ball = (ball_x, ball_y, ball_width, ball_height)
    pygame.draw.rect(screen, COLOR_DARKBLUE, ball)
    # exit of game
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            exit()
        # player movement
        if pygame.key.get_pressed()[K_a]:
            player_x -= 10
        if player_x <= 10:
            player_x = 10
        if pygame.key.get_pressed()[K_d]:
            player_x += 10
        if player_x >= 465:
            player_x = 465
    # ball collision
    if ball_y >= 700:
        ball_x = 250
        ball_y = 450
        ball_dy *= -1
        ball_dx *= -1
        ball_dx = 5
        ball_dy = -5
    if ball_y <= 10:
        ball_dy *= -1
    if ball_x >= 495:
        ball_dx *= -1
    if ball_x <= 10:
        ball_dx *= -1
    # ball collision with the paddle player
    if player_y <= ball_y + 10 <= player_y + 10 and player_x <= ball_x <= player_x + 30:
        if ball_dy > 0:
            ball_dy *= -1
    # ball collision with the bricks
    for brick in bricks:
        if (brick.x <= ball_x <= brick.x + brick.width) or (brick.x <= ball_x + ball_width <= brick.x + brick.width):
            if (brick.y <= ball_y <= brick.y + brick.height) or (
                    brick.y <= ball_y + ball_height <= brick.y + brick.height):
                bricks.remove(brick)
                ball_dy *= -1

    # ball movement
    ball_x += ball_dx
    ball_y += ball_dy

    for brick in bricks:
        brick.render()

    # ball
    ball = (ball_x, ball_y, 10, 10)
    #pygame.draw.rect(screen, COLOR_GREEN, pygame.Rect(10, 20, 30, 10))
    # creating the walls (cord.x, cord.y, width, height)
    # wall upper
    pygame.draw.rect(screen, COLOR_GREY, pygame.Rect(0, 0, 495, 20))
    # wall left
    pygame.draw.rect(screen, COLOR_GREY, pygame.Rect(0, 0, 10, 595))
    pygame.draw.rect(screen, COLOR_BLUE, pygame.Rect(0, 595, 10, 20))
    pygame.draw.rect(screen, COLOR_GREY, pygame.Rect(0, 615, 10, 700))
    # wall right
    pygame.draw.rect(screen, COLOR_GREY, pygame.Rect(495, 0, 10, 595))
    pygame.draw.rect(screen, COLOR_BLUE, pygame.Rect(495, 595, 10, 20))
    pygame.draw.rect(screen, COLOR_GREY, pygame.Rect(495, 615, 10, 700))
    pygame.display.update()
